--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: acs; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA acs;


ALTER SCHEMA acs OWNER TO postgres;

--
-- Name: duplicate; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA duplicate;


ALTER SCHEMA duplicate OWNER TO postgres;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


SET search_path = public, pg_catalog;

--
-- Name: acs_check_user(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION acs_check_user(text, text) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
cnt int;
BEGIN
SELECT COUNT(*) INTO cnt AS cnt FROM acs_tokens WHERE user_id=$1 AND token=$2;
IF cnt > 0 THEN
	RETURN TRUE;
ELSE
	RETURN FALSE;
END IF;
END;
$_$;


ALTER FUNCTION public.acs_check_user(text, text) OWNER TO postgres;

--
-- Name: acs_protect_table(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION acs_protect_table(text) RETURNS text
    LANGUAGE plpgsql
    AS $_$
DECLARE
BEGIN

EXECUTE 'ALTER TABLE '|| $1 ||' ADD COLUMN rule uuid';
EXECUTE 'ALTER TABLE '|| $1 ||' RENAME TO ' || $1 || '_protected';
EXECUTE 'CREATE OR REPLACE VIEW  '|| $1 ||' AS SELECT * FROM ' || $1 || '_protected';

RETURN '';
END;
$_$;


ALTER FUNCTION public.acs_protect_table(text) OWNER TO postgres;

--
-- Name: acs_vcs_init(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION acs_vcs_init() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
tablesACS text[];
BEGIN

CREATE SCHEMA duplicate;

CREATE TABLE duplicate.acs_users AS SELECT * FROM public.acs_users;


END;
$$;


ALTER FUNCTION public.acs_vcs_init() OWNER TO postgres;

SET search_path = acs, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: group_user; Type: TABLE; Schema: acs; Owner: postgres; Tablespace: 
--

CREATE TABLE group_user (
    group_id uuid,
    user_id name
);


ALTER TABLE acs.group_user OWNER TO postgres;

--
-- Name: groups; Type: TABLE; Schema: acs; Owner: postgres; Tablespace: 
--

CREATE TABLE groups (
    id uuid,
    name name
);


ALTER TABLE acs.groups OWNER TO postgres;

--
-- Name: groups_struct; Type: TABLE; Schema: acs; Owner: postgres; Tablespace: 
--

CREATE TABLE groups_struct (
    group_id uuid,
    parent_id uuid,
    level integer
);


ALTER TABLE acs.groups_struct OWNER TO postgres;

--
-- Name: rules; Type: TABLE; Schema: acs; Owner: postgres; Tablespace: 
--

CREATE TABLE rules (
    rule uuid,
    rule_desc text
);


ALTER TABLE acs.rules OWNER TO postgres;

--
-- Name: rules_p; Type: TABLE; Schema: acs; Owner: postgres; Tablespace: 
--

CREATE TABLE rules_p (
    rule uuid,
    rule_role text,
    action text,
    rule_group name
);


ALTER TABLE acs.rules_p OWNER TO postgres;

--
-- Name: tokens; Type: TABLE; Schema: acs; Owner: postgres; Tablespace: 
--

CREATE TABLE tokens (
    user_id text,
    token text
);


ALTER TABLE acs.tokens OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: acs; Owner: postgres; Tablespace: 
--

CREATE TABLE users (
    id name,
    id_group text,
    id_parent text,
    "position" name,
    name name
);


ALTER TABLE acs.users OWNER TO postgres;

SET search_path = duplicate, pg_catalog;

--
-- Name: acs_users; Type: TABLE; Schema: duplicate; Owner: postgres; Tablespace: 
--

CREATE TABLE acs_users (
    id name,
    id_group text,
    id_parent text,
    "position" name,
    name name
);


ALTER TABLE duplicate.acs_users OWNER TO postgres;

SET search_path = public, pg_catalog;

--
-- Name: table_t_protected; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE table_t_protected (
    f1 text,
    f2 text,
    rule uuid
);


ALTER TABLE public.table_t_protected OWNER TO postgres;

--
-- Name: table_t; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW table_t AS
 SELECT table_t_protected.f1,
    table_t_protected.f2,
    table_t_protected.rule
   FROM table_t_protected;


ALTER TABLE public.table_t OWNER TO postgres;

--
-- Name: test; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE test (
    num integer,
    rule name
);


ALTER TABLE public.test OWNER TO postgres;

--
-- Name: test_table_protected; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE test_table_protected (
    field1 name,
    field2 name,
    rule uuid
);


ALTER TABLE public.test_table_protected OWNER TO postgres;

--
-- Name: test_table; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW test_table AS
 SELECT test_table_protected.field1,
    test_table_protected.field2,
    test_table_protected.rule
   FROM test_table_protected;


ALTER TABLE public.test_table OWNER TO postgres;

--
-- Name: testtable_protected; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE testtable_protected (
    name character(1)[],
    rule uuid
);


ALTER TABLE public.testtable_protected OWNER TO postgres;

--
-- Name: testtable; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW testtable AS
 SELECT testtable_protected.name,
    testtable_protected.rule
   FROM testtable_protected;


ALTER TABLE public.testtable OWNER TO postgres;

SET search_path = acs, pg_catalog;

--
-- Data for Name: group_user; Type: TABLE DATA; Schema: acs; Owner: postgres
--

COPY group_user (group_id, user_id) FROM stdin;
3294a3ba-ccca-4e15-4aa8-b9d7d17894dc	admin
9a5942d9-4de5-49cc-787c-479bbe6c84bc	admin
9a5942d9-4de5-49cc-787c-479bbe6c84bc	stid2
a6c7b9ee-278e-49f1-7dee-2e6186ab3cb8	admin
a6c7b9ee-278e-49f1-7dee-2e6186ab3cb8	stud12
0d72916f-c023-4925-6dcd-87db6ef47c32	admin
0d72916f-c023-4925-6dcd-87db6ef47c32	stid2
70959605-c4d9-41c3-be33-f151e72365b5	stud12
fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2	admin
fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2	stid2
fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2	stud12
\.


--
-- Data for Name: groups; Type: TABLE DATA; Schema: acs; Owner: postgres
--

COPY groups (id, name) FROM stdin;
8a83161a-56fe-4e78-6a2d-cc1ceeadf761	1
1757d4cd-b661-4afc-63c0-d562b866b7e3	3
8d391e82-759a-4992-507f-d8e9f943220c	5
e7ba5167-8899-4adb-7e45-4da0ccdf59fa	4
56ece860-65c1-46a1-7e0f-cf6a2a446359	2
70959605-c4d9-41c3-be33-f151e72365b5	Отдел_2
fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2	Отдел_1
\.


--
-- Data for Name: groups_struct; Type: TABLE DATA; Schema: acs; Owner: postgres
--

COPY groups_struct (group_id, parent_id, level) FROM stdin;
fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2	70959605-c4d9-41c3-be33-f151e72365b5	1
\.


--
-- Data for Name: rules; Type: TABLE DATA; Schema: acs; Owner: postgres
--

COPY rules (rule, rule_desc) FROM stdin;
a7c85b3d-54b3-4442-4410-58bacc2cfbc9	Документ_2
4e3e5ce2-4109-4c2d-adf2-3a215035bb22	Документ_1
\.


--
-- Data for Name: rules_p; Type: TABLE DATA; Schema: acs; Owner: postgres
--

COPY rules_p (rule, rule_role, action, rule_group) FROM stdin;
a7c85b3d-54b3-4442-4410-58bacc2cfbc9	stud12	insert	\N
a7c85b3d-54b3-4442-4410-58bacc2cfbc9	admin	insert	\N
4e3e5ce2-4109-4c2d-adf2-3a215035bb22	admin	select	fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2
4e3e5ce2-4109-4c2d-adf2-3a215035bb22	stid2	select	fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2
4e3e5ce2-4109-4c2d-adf2-3a215035bb22	stud12	select	fc6ae330-4a2d-40b6-a46c-fb23a9fd83e2
\.


--
-- Data for Name: tokens; Type: TABLE DATA; Schema: acs; Owner: postgres
--

COPY tokens (user_id, token) FROM stdin;
admin	8shnv6271jodoisxuyy274g1b
admin	8shnv6271jodoisxuyy274g1b
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: acs; Owner: postgres
--

COPY users (id, id_group, id_parent, "position", name) FROM stdin;
admin	\N	\N	Admin	Admin
stid2	\N	\N	Студент	Stud2
stud12	\N	\N	Студент	Dima
\.


SET search_path = duplicate, pg_catalog;

--
-- Data for Name: acs_users; Type: TABLE DATA; Schema: duplicate; Owner: postgres
--

COPY acs_users (id, id_group, id_parent, "position", name) FROM stdin;
admin	\N	\N	Admin	Admin
stid2	\N	\N	Студент	Stud2
stud12	\N	\N	Студент	Dima
\.


SET search_path = public, pg_catalog;

--
-- Data for Name: table_t_protected; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY table_t_protected (f1, f2, rule) FROM stdin;
\.


--
-- Data for Name: test; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY test (num, rule) FROM stdin;
1	\N
3	4e3e5ce2-4109-4c2d-adf2-3a215035bb22
22	999e5ce2-4109-4c2d-adf2-3a215035bb22
\.


--
-- Data for Name: test_table_protected; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY test_table_protected (field1, field2, rule) FROM stdin;
\.


--
-- Data for Name: testtable_protected; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY testtable_protected (name, rule) FROM stdin;
\.


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: test_table_protected; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE test_table_protected FROM PUBLIC;
REVOKE ALL ON TABLE test_table_protected FROM postgres;


--
-- Name: test_table; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE test_table FROM PUBLIC;
REVOKE ALL ON TABLE test_table FROM postgres;
GRANT ALL ON TABLE test_table TO postgres;


--
-- Name: testtable_protected; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE testtable_protected FROM PUBLIC;
REVOKE ALL ON TABLE testtable_protected FROM postgres;


--
-- Name: testtable; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE testtable FROM PUBLIC;
REVOKE ALL ON TABLE testtable FROM postgres;
GRANT ALL ON TABLE testtable TO postgres;


--
-- PostgreSQL database dump complete
--

